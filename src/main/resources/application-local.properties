# flyway and validation
spring.flyway.enabled=true
spring.datasource.url=jdbc:postgresql://localhost:5434/funding_prod
#spring.datasource.url=jdbc:postgresql://45.133.178.241:5432/funding_prod
spring.datasource.username=admin
#spring.datasource.password=nm[pv3[0%&#{!td745@#
spring.datasource.password=pwd
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# solr
spring.data.solr.host=http://45.133.178.241:8983/solr
# security (keycloak)
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://auth.innovilyse.com/auth/realms/innovilyse/protocol/openid-connect/certs
# keycloak admin
keycloak.admin.server-url=https://auth.innovilyse.com/auth
keycloak.admin.realm=master
keycloak.service.realm=innovilyse
keycloak.admin.client-id=admin-cli
keycloak.admin.username=admin
keycloak.admin.password=Beqwo#@!8yrn%b89p0QW

## facebook auth
#spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
#spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
#
## google auth
#spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
#spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

stripe.api.key=sk_test_51PUU4UL9MMMwitwgjRvYpFKvbSg7udQJqnvUtMmkNCdUY3gdyu8I9VzIsywzgnPPiPFgd4CJ37byoGzEGTBmZR8T00Mr70QbB3

# test
stripe.webhook.secret=whsec_idc011mZ5f6L468DPgYf5uYShhJ80jtq
# local
#stripe.webhook.secret=whsec_45544d9fef6ec283afd93797019f70492c91394671214f72d0bf4ef2a44c36b0
